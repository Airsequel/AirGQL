{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "INLINE_FRAGMENT",
            "FRAGMENT_SPREAD",
            "FIELD"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "INLINE_FRAGMENT",
            "FRAGMENT_SPREAD",
            "FIELD"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "ENUM_VALUE",
            "FIELD_DEFINITION"
          ],
          "name": "deprecated"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "Available columns for table \"users\"",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "created_utc",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "number_of_logins",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "progress",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "users_row",
          "possibleTypes": null
        },
        {
          "description": "Mutation response for users",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "affected_rows",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "returning",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "users_row",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "users_mutation_response",
          "possibleTypes": null
        },
        {
          "description": "Input object for users",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "created_utc",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "number_of_logins",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "users_insert_input",
          "possibleTypes": null
        },
        {
          "description": "This enum contains a variant for each column in the table",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "rowid"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "email"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "created_utc"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "number_of_logins"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "progress"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "ENUM",
          "name": "users_column",
          "possibleTypes": null
        },
        {
          "description": "Specifies how broken UNIQUE constraints for users should be handled",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "columns to handle conflicts of",
              "name": "constraint",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_column",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "columns to override on conflict",
              "name": "update_columns",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_column",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "filter specifying which conflicting columns to update",
              "name": "where",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "users_filter",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "users_upsert_on_conflict",
          "possibleTypes": null
        },
        {
          "description": "Fields to set for users",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "created_utc",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "number_of_logins",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "users_set_input",
          "possibleTypes": null
        },
        {
          "description": "Filter object to select rows",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "email",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "created_utc",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "number_of_logins",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FloatComparison",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "users_filter",
          "possibleTypes": null
        },
        {
          "description": "Ordering options when selecting data from \"users\".",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "email",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "created_utc",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "number_of_logins",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "users_order_by",
          "possibleTypes": null
        },
        {
          "description": "Available columns for table \"songs\"",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "",
              "isDeprecated": false,
              "name": "duration_seconds",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "songs_row",
          "possibleTypes": null
        },
        {
          "description": "Mutation response for songs",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "affected_rows",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "returning",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "songs_row",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "songs_mutation_response",
          "possibleTypes": null
        },
        {
          "description": "Input object for songs",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "duration_seconds",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "songs_insert_input",
          "possibleTypes": null
        },
        {
          "description": "This enum contains a variant for each column in the table",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "rowid"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "duration_seconds"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "ENUM",
          "name": "songs_column",
          "possibleTypes": null
        },
        {
          "description": "Specifies how broken UNIQUE constraints for songs should be handled",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "columns to handle conflicts of",
              "name": "constraint",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_column",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "columns to override on conflict",
              "name": "update_columns",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_column",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "filter specifying which conflicting columns to update",
              "name": "where",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "songs_filter",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "songs_upsert_on_conflict",
          "possibleTypes": null
        },
        {
          "description": "Fields to set for songs",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "duration_seconds",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "songs_set_input",
          "possibleTypes": null
        },
        {
          "description": "Filter object to select rows",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringComparison",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "duration_seconds",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntComparison",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "songs_filter",
          "possibleTypes": null
        },
        {
          "description": "Ordering options when selecting data from \"songs\".",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "",
              "name": "rowid",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "",
              "name": "duration_seconds",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderingTerm",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "songs_order_by",
          "possibleTypes": null
        },
        {
          "description": "Compare to an Int",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "eq",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "neq",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gt",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gte",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lt",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lte",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ilike",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "nin",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IntComparison",
          "possibleTypes": null
        },
        {
          "description": "Compare to a Float",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "eq",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "neq",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gt",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gte",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lt",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lte",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ilike",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "nin",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "FloatComparison",
          "possibleTypes": null
        },
        {
          "description": "Compare to a String",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "eq",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "neq",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gt",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gte",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lt",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lte",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ilike",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "nin",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "StringComparison",
          "possibleTypes": null
        },
        {
          "description": "Compare to a Boolean",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "eq",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "neq",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gt",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "gte",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lt",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lte",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "ilike",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "nin",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BooleanComparison",
          "possibleTypes": null
        },
        {
          "description": "Ordering options when ordering by a column",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "In ascending order",
              "isDeprecated": false,
              "name": "ASC"
            },
            {
              "deprecationReason": "GraphQL spec recommends all caps for enums",
              "description": "In ascending order",
              "isDeprecated": true,
              "name": "asc"
            },
            {
              "deprecationReason": null,
              "description": "In descending order",
              "isDeprecated": false,
              "name": "DESC"
            },
            {
              "deprecationReason": "GraphQL spec recommends all caps for enums",
              "description": "In descending order",
              "isDeprecated": true,
              "name": "desc"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "ENUM",
          "name": "OrderingTerm",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select specific rows",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "users_filter",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Columns used to sort the data",
                  "name": "order_by",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_order_by",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Limit the number of returned rows",
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The index to start returning rows from",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Rows from the table \"users\"",
              "isDeprecated": false,
              "name": "users",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "users_row",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select specific rows",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "songs_filter",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Columns used to sort the data",
                  "name": "order_by",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_order_by",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Limit the number of returned rows",
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The index to start returning rows from",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Rows from the table \"songs\"",
              "isDeprecated": false,
              "name": "songs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "songs_row",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Rows to be inserted",
                  "name": "objects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "users_insert_input",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Specifies how to handle broken UNIQUE constraints",
                  "name": "on_conflict",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "users_upsert_on_conflict",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Insert new rows in table \"users\"",
              "isDeprecated": false,
              "name": "insert_users",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "users_mutation_response",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select rows to be updated",
                  "name": "filter",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_filter",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Fields to be updated",
                  "name": "set",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_set_input",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Update rows in table \"users\"",
              "isDeprecated": false,
              "name": "update_users",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "users_mutation_response",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select rows to be deleted",
                  "name": "filter",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "users_filter",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete rows in table \"users\"",
              "isDeprecated": false,
              "name": "delete_users",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "users_mutation_response",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Rows to be inserted",
                  "name": "objects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "songs_insert_input",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Specifies how to handle broken UNIQUE constraints",
                  "name": "on_conflict",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "songs_upsert_on_conflict",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Insert new rows in table \"songs\"",
              "isDeprecated": false,
              "name": "insert_songs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "songs_mutation_response",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select rows to be updated",
                  "name": "filter",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_filter",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Fields to be updated",
                  "name": "set",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_set_input",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Update rows in table \"songs\"",
              "isDeprecated": false,
              "name": "update_songs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "songs_mutation_response",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Filter to select rows to be deleted",
                  "name": "filter",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "songs_filter",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete rows in table \"songs\"",
              "isDeprecated": false,
              "name": "delete_songs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "songs_mutation_response",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": null
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": null
        },
        {
          "description": "Signed double-precision floating-point value.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": null
        },
        {
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": null
        },
        {
          "description": "The `Upload` scalar type represents a file upload.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Upload",
          "possibleTypes": null
        },
        {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null
        },
        {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null
        },
        {
          "description": "An enum describing what kind of type a given `__Type` is.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "LIST"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null
        },
        {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null
        },
        {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null
        },
        {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null
        },
        {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null
        },
        {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": [],
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null
        }
      ]
    }
  }
}
